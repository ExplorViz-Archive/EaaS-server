# Start ExplorViz Backend in version 1.5.0
# Monitored applications can be connected

# Environment Variables are based on the
# properties file of each service, e.g,
# https://github.com/ExplorViz/explorviz-backend/blob/dev-1/user-service/src/main/resources/explorviz.properties

# Modified for ExplorViz as a Service:
# - Removed discovery service because it is not useful for us
# - Only publish the ports we need, in order to avoid any conflicts on the host
# - Remove all volumes because we don't want persistent data
# - Add placeholder variables
# - Add eaas.instance.name=%INSTANCE_NAME% label so traefik autodiscovery doesn't mix up instances

version: "3.3"
services:

  ### ExplorViz Services ###

  user-service:
    image: explorviz/explorviz-backend-user-service:1.5.0
    expose:
      - "8082"
    depends_on:
      - mongo-user
      - kafka
      - traefik
    environment:
      - MONGO_HOST=mongo-user
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    labels:
      - "traefik.enable=true"
      - "traefik.port=8082"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/v1/tokens`) || PathPrefix(`/v1/users`) || PathPrefix(`/v1/roles`) || PathPrefix(`/v1/userbatch`)"
      - "eaas.instance.name=%INSTANCE_NAME%"

  settings-service:
    image: explorviz/explorviz-backend-settings-service:1.5.0
    expose:
      - "8087"
    depends_on:
      - mongo-settings
      - kafka
      - traefik
    environment:
      - MONGO_HOST=mongo-settings
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    labels:
      - "traefik.enable=true"
      - "traefik.port=8087"
      - "traefik.http.routers.settings-service.rule=PathPrefix(`/v1/settings`) || PathPrefix(`/v1/preferences`)"
      - "eaas.instance.name=%INSTANCE_NAME%"

  landscape-service:
    image: explorviz/explorviz-backend-landscape-service:1.5.0
# EaaS: Changed from ports to expose
    expose:
      - "10135"
    depends_on:
      - kafka
    environment:
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update

  broadcast-service:
    image: explorviz/explorviz-backend-broadcast-service:1.5.0
    expose:
      - "8081"
    depends_on:
      - kafka
      - traefik
    environment:
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update
    labels:
      - "traefik.enable=true"
      - "traefik.port=8081"
      - "traefik.http.routers.broadcast-service.rule=PathPrefix(`/v1/landscapes/broadcast`)"
      - "traefik.http.routers.broadcast-service.priority=200"
      - "eaas.instance.name=%INSTANCE_NAME%"

  history-service:
    image: explorviz/explorviz-backend-history-service:1.5.0
    expose:
      - "8086"
    depends_on:
      - mongo-history
      - kafka
      - traefik
    environment:
      - MONGO_HOST=mongo-history
      - EXCHANGE_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EXCHANGE_KAFKA_TOPIC_NAME=landscape-update
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.history-service.rule=PathPrefix(`/v1/landscapes`) || PathPrefix(`/v1/timestamps`) "
      - "traefik.port=8086"
      - "eaas.instance.name=%INSTANCE_NAME%"

  analysis-service:
    image: explorviz/explorviz-backend-analysis-service:1.5.0
# EaaS: Changed from ports to expose
    expose:
      - "10133"

  frontend:
    image: explorviz/explorviz-frontend:1.5.0
    ports:
      - "%FRONTEND_PORT%:80"
    environment:
      - "API_ROOT=http://traefik:8080"
      - "FRONTEND_IP=%ACCESS_URL%"
    depends_on:
# EaaS: Remove discovery-service
#      - discovery-service
      - landscape-service
      - analysis-service
      - user-service
      - settings-service
      - history-service

  ### Software Stack ###

  traefik:
# EaaS: Update to latest Traefik
    image: "traefik:v2.2"
    command:
      - "--entrypoints.web.address=:8080"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.constraints=Label(`eaas.instance.name`, `%INSTANCE_NAME%`)"
# EaaS: Changed from ports to expose
    expose:
      - "8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  zookeeper:
    image: zookeeper:3.5
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  mongo-user:
    image: mongo
    command: mongod --port 27017
    expose:
      - "27017"

  mongo-history:
    image: mongo
    command: mongod --port 27018
    expose:
      - "27018"

  mongo-settings:
    image: mongo
    command: mongod --port 27019
    expose:
      - "27019"

# EaaS: Add the application we want to test
  application:
    image: "%APPLICATION_IMAGE%"
    depends_on:
      - analysis-service
